const { MongoClient } = require('mongodb');

// Your MongoDB Atlas connection string
const MONGODB_URI = 'mongodb+srv://eslamabdaltif:oneone2@cluster0marakshv2.ltf0bnd.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0marakshv2';

async function addImageUrlsToFoodItems() {
  let client;
  
  try {
    console.log('üåê Connecting to MongoDB Atlas...');
    console.log('Connection string:', MONGODB_URI.replace(/\/\/.*@/, '//***:***@')); // Hide credentials
    
    client = new MongoClient(MONGODB_URI);
    await client.connect();
    
    const db = client.db();
    console.log('‚úÖ Connected to Atlas database:', db.databaseName);
    
    const menuItemsCollection = db.collection('menuitems');
    
    // Get all menu items
    const menuItems = await menuItemsCollection.find({}).toArray();
    console.log(`\nüìã Found ${menuItems.length} menu items to update`);
    
    // Image mapping based on food categories and available images
    const imageMappings = {
      // Moroccan Food images
      'ÿ¥ŸÉÿ¥ŸàŸÉÿ©': '/download (1).jpeg',
      'ÿ®Ÿäÿ∂ ÿßŸàŸÖŸÑŸäÿ™': '/download (2).jpeg',
      'ŸÉÿ®ÿØŸá': '/download (3).jpeg',
      'ŸÅŸàŸÑ': '/download (4).jpeg',
      'ÿµŸäŸÜŸäÿ© ŸÖÿ¥ŸÉŸÑŸá': '/download.jpeg',
      'ÿ≠ÿ±Ÿäÿ±Ÿá ŸÖŸÅÿ±ÿ®Ÿäÿ©': '/download (1).jpeg',
      'ÿ®Ÿäÿµÿßÿ±Ÿá ŸÖÿ∫ÿ±ÿ®Ÿäÿ©': '/download (2).jpeg',
      'ŸÖÿ≥ŸÖŸÜ ŸÖÿ∫ÿ±ÿ®Ÿä': '/download (3).jpeg',
      'ÿ≠ÿ±ÿ¥Ÿá ŸÖÿ∫ÿ±ÿ®Ÿäÿ©': '/download (4).jpeg',
      'ÿ∑ÿßŸÇŸàÿ≥ ŸÖÿ∫ÿ±ÿ®Ÿä': '/download.jpeg',
      'ÿ®ŸàŸÉÿßÿØŸäŸàÿ≥': '/download (1).jpeg',
      'ÿ®ÿ∑ÿ®Ÿàÿ∑ ÿ¨ÿ®ŸÜ': '/download (2).jpeg',
      'ÿ®ÿ∑ÿ®Ÿàÿ∑ ŸÑÿ≠ŸÖ': '/download (3).jpeg',
      'ÿ®ÿ∑ÿ®Ÿàÿ∑ ÿÆÿ∂ÿßÿ±': '/download (4).jpeg',
      'ÿ≥ŸÑÿ∑ÿ© ŸÖÿ∫ÿ±ÿ®Ÿäÿ©': '/download.jpeg',
      'ÿ¨ÿ±ÿßÿ™ÿßŸÜ': '/download (1).jpeg',
      
      // Pizza images
      'ÿ®Ÿäÿ™ÿ≤ÿß ÿÆÿ∂ÿßÿ±': '/pngegg.png',
      'ÿ®Ÿäÿ™ÿ≤ÿß ÿØÿ¨ÿßÿ¨': '/pngegg (1).png',
      'ÿ®Ÿäÿ™ÿ≤ÿß ŸÖÿ¥ŸÉŸÑ': '/pngegg.png',
      
      // Desserts images
      'ÿ™ÿ¥Ÿäÿ≤ ŸÉŸäŸÉ ÿ™Ÿàÿ™ ÿßÿ≤ÿ±ŸÇ': '/Turkish Tea.jpeg',
      'ÿ™ÿ¥Ÿäÿ≤ ŸÉŸäŸÉ ŸÅÿ±ÿßŸàŸÑŸá': '/Turkish Tea.jpeg',
      'ŸÉŸäŸÉ ÿ≥ŸÜŸäŸÉÿ±ÿ≥': '/Turkish Tea.jpeg',
      'ŸÉŸäŸÉ ÿ™ÿ±ÿßŸÖÿ≥ŸäŸà': '/Turkish Tea.jpeg',
      'ÿ™ÿ¥Ÿäÿ≤ ŸÉŸäŸÉ ŸÑŸàÿ™ÿ≥': '/Turkish Tea.jpeg',
      'ÿ®ŸàÿØŸäŸÜÿ¨': '/Turkish Tea.jpeg',
      'ŸÉŸàŸÉŸäÿ≤': '/Turkish Tea.jpeg',
      'ŸÉŸäŸÉ ÿπÿ≥ŸÑ': '/Turkish Tea.jpeg',
      'ÿ≥ÿßŸÜ ÿ≥ÿ®Ÿäÿ≥ÿ™ŸäÿßŸÜ': '/Turkish Tea.jpeg',
      'ŸÉŸäŸÉ ŸÜŸàÿ™ŸäŸÑÿß': '/Turkish Tea.jpeg',
      'ŸÉÿ±ÿßŸÜÿ¥Ÿä ŸÉŸäŸÉ': '/Turkish Tea.jpeg',
      
      // Coffee images
      'ÿßÿ≥ÿ®ÿ±Ÿäÿ≥Ÿà': '/Cafea boabe.jpeg',
      'ŸÖŸÉÿßÿ™Ÿà': '/Cafea boabe.jpeg',
      'ÿßŸÖÿ±ŸäŸÉÿßŸÜŸà': '/Cafea boabe.jpeg',
      'ŸÉŸàÿ±ÿ™ÿßÿØŸà': '/Cafea boabe.jpeg',
      'ŸÅŸÑÿßÿ™ ŸàÿßŸäÿ™': '/Cafea boabe.jpeg',
      'ŸÑÿßÿ™ŸäŸá': '/Cafea boabe.jpeg',
      'ŸÉÿßÿ®ÿ™ÿ¥ŸäŸÜŸà': '/Cafea boabe.jpeg',
      'ÿ≥ÿ®ŸÜÿ¥ ŸÑÿßÿ™ŸäŸá': '/Cafea boabe.jpeg',
      'ŸàÿßŸäÿ™ ŸÖŸàŸÉÿß ÿ≠ÿßÿ±': '/Cafea boabe.jpeg',
      'ŸÖŸàŸÉÿß ÿ≠ÿßÿ±': '/Cafea boabe.jpeg',
      'ÿßŸäÿ≥ ÿßŸÖÿ±ŸäŸÉÿßŸÜŸà': '/Cafea boabe.jpeg',
      'ÿßŸäÿ≥ ŸÑÿßÿ™ŸäŸá': '/Cafea boabe.jpeg',
      'ÿßŸäÿ≥ ÿ≥ÿ®ŸÜÿ¥ ŸÑÿßÿ™ŸäŸá': '/Cafea boabe.jpeg',
      'ÿ£Ÿäÿ≥ ŸàÿßŸäÿ™ ŸÖŸàŸÉÿß': '/Cafea boabe.jpeg',
      'ÿ£Ÿäÿ≥ ŸÖŸàŸÉÿß': '/Cafea boabe.jpeg',
      'ŸÇŸáŸàÿ© ÿßŸÑŸäŸàŸÖ ÿ≠ÿßÿ±': '/Cafea boabe.jpeg',
      'ŸÇŸáŸàÿ© ÿßŸÑŸäŸàŸÖ ÿ®ÿßÿ±ÿØ': '/Cafea boabe.jpeg',
      
      // Natural Juices images
      'ÿ£Ÿäÿ≥ ŸÉÿ±ŸÉÿØŸäŸá': '/Cup With Straw.png',
      'ÿ®ÿ±ÿ™ŸÇÿßŸÑ': '/Cup With Straw.png',
      'ŸÖŸÜÿ¨ÿß ÿ≥ÿßÿØÿ©': '/Cup With Straw.png',
      'ŸÖŸÜÿ¨ÿß ÿ≠ŸÑŸäÿ®': '/Cup With Straw.png',
      'ŸÑŸäŸÖŸàŸÜ ÿ≥ÿßÿØÿ©': '/Cup With Straw.png',
      'ŸÑŸäŸÖŸàŸÜ ŸÜÿπŸÜÿßÿπ': '/Cup With Straw.png',
      'ÿßŸÅŸÉÿßÿØŸà ÿ≠ŸÑŸäÿ®': '/Cup With Straw.png',
      
      // Energy Drinks images
      'ÿ±ÿØÿ®ŸàŸÑ': '/High Voltage.png',
      'ŸÉŸàÿØÿ±ÿØ': '/High Voltage.png',
      'ÿ±Ÿäÿ™ÿß': '/High Voltage.png',
      'ŸÖŸáŸäÿ™Ÿà ÿ±ÿØÿ®ŸàŸÑ': '/High Voltage.png',
      'ŸÖŸáŸäÿ™Ÿà ŸÉŸàÿØÿ±ÿØ': '/High Voltage.png',
      'ŸÖŸáŸäÿ™Ÿà ÿ±Ÿäÿ™ÿß': '/High Voltage.png',
      'ŸÖŸáŸäÿ™Ÿà ÿ≥ŸÅŸÜ': '/High Voltage.png',
      'ÿ≥ŸÅŸÜ': '/High Voltage.png',
      'ÿ≠ŸÖÿ∂Ÿäÿßÿ™': '/High Voltage.png',
      'ÿ®ÿ®ÿ≥Ÿä': '/High Voltage.png',
      
      // Smoothies images
      'ŸÖŸàÿ≥Ÿä ŸÅÿ±ŸàŸÑÿ©': '/Tropical Drink.png',
      'ŸÖŸàÿ≥Ÿä ÿ¥ÿπŸäÿ±': '/Tropical Drink.png',
      'ŸÖŸàÿ≥Ÿä ÿ±ŸÖÿßŸÜ': '/Tropical Drink.png',
      'ŸÅŸä60': '/Tropical Drink.png',
      'ÿßŸäÿ≥ ÿØÿ±Ÿäÿ®': '/Tropical Drink.png',
      
      // Tea images
      'ÿ¥ÿßŸä ÿ£ÿ´ÿßŸä ÿ®ÿ±ÿßÿØ ŸÉÿ®Ÿäÿ±': '/Turkish Tea.jpeg',
      'ÿ¥ÿßŸä ÿ£ÿ´ÿßŸä ÿ®ÿ±ÿßÿØ Ÿàÿ≥ÿ∑': '/Turkish Tea.jpeg',
      'ÿ¥ÿßŸä ÿ£ÿ´ÿßŸä ÿ®ÿ±ÿßÿØ ÿµÿ∫Ÿäÿ±': '/Turkish Tea.jpeg',
      'ÿ¥ÿßŸä ÿ∑ÿßÿ¶ŸÅŸä ÿ®ÿ±ÿßÿØ ŸÉÿ®Ÿäÿ±': '/Turkish Tea.jpeg',
      'ÿ¥ÿßŸä ÿ∑ÿßÿ¶ŸÅŸä ÿ®ÿ±ÿßÿØ Ÿàÿ≥ÿ∑': '/Turkish Tea.jpeg',
      'ÿ¥ÿßŸä ÿ∑ÿßÿ¶ŸÅŸä ÿ®ÿ±ÿßÿØ ÿµÿ∫Ÿäÿ±': '/Turkish Tea.jpeg',
      'ÿ¥ÿßŸä ÿ£ÿ≠ŸÖÿ± ÿ®ÿ±ÿßÿØ ŸÉÿ®Ÿäÿ±': '/Turkish Tea.jpeg',
      'ÿ¥ÿßŸä ÿ£ÿ≠ŸÖÿ± ÿ®ÿ±ÿßÿØ Ÿàÿ≥ÿ∑': '/Turkish Tea.jpeg',
      'ÿ¥ÿßŸä ÿ£ÿ≠ŸÖÿ± ÿ®ÿ±ÿßÿØ ÿµÿ∫Ÿäÿ±': '/Turkish Tea.jpeg'
    };
    
    console.log('\nüñºÔ∏è  Updating menu items with image URLs...');
    
    let updatedCount = 0;
    let skippedCount = 0;
    
    for (const item of menuItems) {
      const imageUrl = imageMappings[item.name];
      
      if (imageUrl) {
        await menuItemsCollection.updateOne(
          { _id: item._id },
          { 
            $set: { 
              imageUrl: imageUrl,
              updatedAt: new Date()
            }
          }
        );
        console.log(`   ‚úÖ Updated: ${item.name} -> ${imageUrl}`);
        updatedCount++;
      } else {
        console.log(`   ‚ö†Ô∏è  No image mapping found for: ${item.name}`);
        skippedCount++;
      }
    }
    
    console.log(`\nüìä Summary:`);
    console.log(`   Updated: ${updatedCount} items`);
    console.log(`   Skipped: ${skippedCount} items`);
    
    // Verify the updates
    console.log('\n‚úÖ Verification:');
    const itemsWithImages = await menuItemsCollection.countDocuments({ imageUrl: { $exists: true } });
    const totalItems = await menuItemsCollection.countDocuments();
    console.log(`   Items with images: ${itemsWithImages}/${totalItems}`);
    
    console.log('\nüéâ Image URLs added successfully!');
    
  } catch (error) {
    console.error('‚ùå Error adding image URLs:', error);
    throw error;
  } finally {
    if (client) {
      await client.close();
      console.log('\nüîå Disconnected from MongoDB Atlas');
    }
  }
}

// Run the script
addImageUrlsToFoodItems().catch(console.error);
