const mongoose = require('mongoose');

// Category Schema
const categorySchema = new mongoose.Schema({
  name: {
    type: String,
    required: true,
    trim: true,
  },
  nameEn: {
    type: String,
    trim: true,
  },
  description: {
    type: String,
    trim: true,
  },
  image: {
    type: String,
  },
  color: {
    type: String,
    default: '#4F3500',
  },
  icon: {
    type: String,
  },
  order: {
    type: Number,
    default: 0,
  },
  featured: {
    type: Boolean,
    default: false,
  },
  featuredOrder: {
    type: Number,
    default: 0,
  },
  status: {
    type: String,
    enum: ['active', 'inactive'],
    default: 'active',
  },
}, {
  timestamps: true,
});

// MenuItem Schema
const menuItemSchema = new mongoose.Schema({
  name: {
    type: String,
    required: true,
    trim: true,
  },
  nameEn: {
    type: String,
    trim: true,
  },
  description: {
    type: String,
    trim: true,
  },
  descriptionEn: {
    type: String,
    trim: true,
  },
  categoryId: {
    type: String,
    required: true,
  },
  price: {
    type: Number,
    required: true,
    min: 0,
  },
  discountPrice: {
    type: Number,
    min: 0,
  },
  image: {
    type: String,
  },
  images: [{
    type: String,
  }],
  color: {
    type: String,
    default: '#4F3500',
  },
  ingredients: [{
    ingredientId: {
      type: String,
      required: true,
    },
    portion: {
      type: Number,
      required: true,
      default: 1,
    },
    required: {
      type: Boolean,
      default: true,
    },
  }],
  preparationTime: {
    type: Number,
    default: 0,
  },
  calories: {
    type: Number,
    default: 0,
  },
  servingSize: {
    type: String,
  },
  tags: [{
    type: String,
  }],
  allergens: [{
    type: String,
  }],
  status: {
    type: String,
    enum: ['active', 'inactive', 'out_of_stock'],
    default: 'active',
  },
  featured: {
    type: Boolean,
    default: false,
  },
  order: {
    type: Number,
    default: 0,
  },
}, {
  timestamps: true,
});

const Category = mongoose.models.Category || mongoose.model('Category', categorySchema);
const MenuItem = mongoose.models.MenuItem || mongoose.model('MenuItem', menuItemSchema);

// New beverage categories
const beverageCategories = [
  {
    name: 'ุงููููุฉ ุงูุณุงุฎูุฉ',
    nameEn: 'Hot Coffee',
    description: 'ูุดุฑูุจุงุช ุงููููุฉ ุงูุณุงุฎูุฉ ุงูุทุงุฒุฌุฉ',
    color: '#8B4513',
    icon: 'โ',
    order: 1,
    featured: true,
    featuredOrder: 1,
    status: 'active'
  },
  {
    name: 'ุงููุดุฑูุจุงุช ุงูุจุงุฑุฏุฉ',
    nameEn: 'Cold Beverages',
    description: 'ูุดุฑูุจุงุช ุงููููุฉ ุงูุจุงุฑุฏุฉ ุงูููุนุดุฉ',
    color: '#4169E1',
    icon: '๐ง',
    order: 2,
    featured: true,
    featuredOrder: 2,
    status: 'active'
  },
  {
    name: 'ุนุตุงุฆุฑ ุทุงุฒุฌุฉ',
    nameEn: 'Fresh Juices',
    description: 'ุนุตุงุฆุฑ ุงูููุงูู ุงูุทุงุฒุฌุฉ ุงูุทุจูุนูุฉ',
    color: '#FF6347',
    icon: '๐น',
    order: 3,
    featured: true,
    featuredOrder: 3,
    status: 'active'
  },
  {
    name: 'ูุดุฑูุจุงุช ุงูุทุงูุฉ',
    nameEn: 'Energy Drinks',
    description: 'ูุดุฑูุจุงุช ุงูุทุงูุฉ ุงูููุนุดุฉ',
    color: '#FFD700',
    icon: 'โก',
    order: 4,
    featured: false,
    status: 'active'
  },
  {
    name: 'ูุดุฑูุจุงุช ุงููููุชู',
    nameEn: 'Mojito Drinks',
    description: 'ูุดุฑูุจุงุช ุงููููุชู ุงูููุนุดุฉ ุจุงููุนูุงุน',
    color: '#32CD32',
    icon: '๐ฟ',
    order: 5,
    featured: false,
    status: 'active'
  },
  {
    name: 'ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ',
    nameEn: 'Soft Drinks',
    description: 'ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ ูุงูููุณู',
    color: '#FF69B4',
    icon: '๐ฅค',
    order: 6,
    featured: false,
    status: 'active'
  },
  {
    name: 'ุงููููุฉ ุงูููุทุฑุฉ',
    nameEn: 'Drip Coffee',
    description: 'ูููุฉ ููุทุฑุฉ ุทุงุฒุฌุฉ',
    color: '#654321',
    icon: 'โ',
    order: 7,
    featured: false,
    status: 'active'
  },
  {
    name: 'ุงูุดุงู',
    nameEn: 'Tea',
    description: 'ุดุงู ุฃุซุงู ูุทุงุฆูู ูุฃุญูุฑ',
    color: '#8B0000',
    icon: '๐ต',
    order: 8,
    featured: false,
    status: 'active'
  },
  {
    name: 'ูููุฉ ุงูููู',
    nameEn: 'Coffee of the Day',
    description: 'ูููุฉ ุงูููู ุงููููุฒุฉ',
    color: '#D2691E',
    icon: 'โญ',
    order: 9,
    featured: true,
    featuredOrder: 4,
    status: 'active'
  }
];

async function updateBeverageMenu() {
  try {
    console.log('Connecting to MongoDB...');
    
    // Connect to MongoDB using the same connection string as the app
    const mongoUri = process.env.MONGODB_URI || 'mongodb://localhost:27017/maraksh-restaurant';
    await mongoose.connect(mongoUri);
    
    console.log('Clearing existing categories and menu items...');
    await MenuItem.deleteMany({});
    await Category.deleteMany({});
    
    console.log('Creating new beverage categories...');
    const createdCategories = await Category.insertMany(beverageCategories);
    
    console.log(`Successfully created ${createdCategories.length} categories:`);
    createdCategories.forEach((category, index) => {
      console.log(`${index + 1}. ${category.name} (${category.nameEn}) - Order: ${category.order}`);
    });
    
    // Create category map for menu items
    const categoryMap = {};
    createdCategories.forEach(cat => {
      categoryMap[cat.name] = cat._id;
    });
    
    // Menu items data
    const menuItems = [
      // Hot Coffee
      { name: 'ุงุณุจุฑูุณู', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 12, order: 1, status: 'active' },
      { name: 'ููุงุชู', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 14, order: 2, status: 'active' },
      { name: 'ุงูุฑููุงูู', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 14, order: 3, status: 'active' },
      { name: 'ููุฑุชุงุฏู', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 15, order: 4, status: 'active' },
      { name: 'ููุงุช ูุงูุช', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 16, order: 5, status: 'active' },
      { name: 'ูุงุชูู', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 17, order: 6, status: 'active' },
      { name: 'ูุงุจุชุดููู', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 17, order: 7, status: 'active' },
      { name: 'ุณุจูุด ูุงุชูู', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 19, order: 8, status: 'active' },
      { name: 'ูุงูุช ูููุง ุญุงุฑ', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 19, order: 9, status: 'active' },
      { name: 'ูููุง ุญุงุฑ', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 19, order: 10, status: 'active' },

      // Cold Beverages
      { name: 'ุงูุณ ุงูุฑููุงูู', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุจุงุฑุฏุฉ'], price: 18, order: 1, status: 'active' },
      { name: 'ุงูุณ ูุงุชูู', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุจุงุฑุฏุฉ'], price: 18, order: 2, status: 'active' },
      { name: 'ุงูุณ ุณุจูุด ูุงุชูู', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุจุงุฑุฏุฉ'], price: 20, order: 3, status: 'active' },
      { name: 'ุฃูุณ ูุงูุช ูููุง', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุจุงุฑุฏุฉ'], price: 20, order: 4, status: 'active' },
      { name: 'ุฃูุณ ูููุง', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุจุงุฑุฏุฉ'], price: 20, order: 5, status: 'active' },
      { name: 'ุฃูุณ ูุฑูุฏูู', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุจุงุฑุฏุฉ'], price: 19, order: 6, status: 'active' },

      // Fresh Juices
      { name: 'ุจุฑุชูุงู', categoryId: categoryMap['ุนุตุงุฆุฑ ุทุงุฒุฌุฉ'], price: 19, order: 1, status: 'active' },
      { name: 'ููุฌุง ุณุงุฏุฉ', categoryId: categoryMap['ุนุตุงุฆุฑ ุทุงุฒุฌุฉ'], price: 19, order: 2, status: 'active' },
      { name: 'ููุฌุง ุญููุจ', categoryId: categoryMap['ุนุตุงุฆุฑ ุทุงุฒุฌุฉ'], price: 19, order: 3, status: 'active' },
      { name: 'ููููู ุณุงุฏุฉ', categoryId: categoryMap['ุนุตุงุฆุฑ ุทุงุฒุฌุฉ'], price: 16, order: 4, status: 'active' },
      { name: 'ููููู ูุนูุงุน', categoryId: categoryMap['ุนุตุงุฆุฑ ุทุงุฒุฌุฉ'], price: 19, order: 5, status: 'active' },
      { name: 'ุงููุงุฏู ุญููุจ', categoryId: categoryMap['ุนุตุงุฆุฑ ุทุงุฒุฌุฉ'], price: 19, order: 6, status: 'active' },

      // Energy Drinks
      { name: 'ุฑุฏุจูู', categoryId: categoryMap['ูุดุฑูุจุงุช ุงูุทุงูุฉ'], price: 20, order: 1, status: 'active' },
      { name: 'ููุฏุฑุฏ', categoryId: categoryMap['ูุดุฑูุจุงุช ุงูุทุงูุฉ'], price: 18, order: 2, status: 'active' },
      { name: 'ุฑูุชุง', categoryId: categoryMap['ูุดุฑูุจุงุช ุงูุทุงูุฉ'], price: 15, order: 3, status: 'active' },

      // Mojito Drinks
      { name: 'ูููุชู ุฑุฏุจูู', categoryId: categoryMap['ูุดุฑูุจุงุช ุงููููุชู'], price: 25, order: 1, status: 'active' },
      { name: 'ูููุชู ููุฏุฑุฏ', categoryId: categoryMap['ูุดุฑูุจุงุช ุงููููุชู'], price: 22, order: 2, status: 'active' },
      { name: 'ูููุชู ุฑูุชุง', categoryId: categoryMap['ูุดุฑูุจุงุช ุงููููุชู'], price: 20, order: 3, status: 'active' },
      { name: 'ูููุชู ุณูู', categoryId: categoryMap['ูุดุฑูุจุงุช ุงููููุชู'], price: 18, order: 4, status: 'active' },

      // Soft Drinks
      { name: 'ุณูู', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ'], price: 7, order: 1, status: 'active' },
      { name: 'ุญูุถูุงุช', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ'], price: 7, order: 2, status: 'active' },
      { name: 'ุจุจุณู', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ'], price: 7, order: 3, status: 'active' },
      { name: 'ููุณู ูุฑููุฉ', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ'], price: 19, order: 4, status: 'active' },
      { name: 'ููุณู ุดุนูุฑ', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ'], price: 19, order: 5, status: 'active' },
      { name: 'ููุณู ุฑูุงู', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ'], price: 19, order: 6, status: 'active' },

      // Drip Coffee
      { name: 'ูู60', categoryId: categoryMap['ุงููููุฉ ุงูููุทุฑุฉ'], price: 18, order: 1, status: 'active' },
      { name: 'ุงูุณ ุฏุฑูุจ', categoryId: categoryMap['ุงููููุฉ ุงูููุทุฑุฉ'], price: 18, order: 2, status: 'active' },

      // Tea
      { name: 'ุดุงู ุฃุซุงู ุจุฑุงุฏ ูุจูุฑ', categoryId: categoryMap['ุงูุดุงู'], price: 25, order: 1, status: 'active' },
      { name: 'ุดุงู ุฃุซุงู ุจุฑุงุฏ ูุณุท', categoryId: categoryMap['ุงูุดุงู'], price: 18, order: 2, status: 'active' },
      { name: 'ุดุงู ุฃุซุงู ุจุฑุงุฏ ุตุบูุฑ', categoryId: categoryMap['ุงูุดุงู'], price: 14, order: 3, status: 'active' },
      { name: 'ุดุงู ุทุงุฆูู ุจุฑุงุฏ ูุจูุฑ', categoryId: categoryMap['ุงูุดุงู'], price: 25, order: 4, status: 'active' },
      { name: 'ุดุงู ุทุงุฆูู ุจุฑุงุฏ ูุณุท', categoryId: categoryMap['ุงูุดุงู'], price: 18, order: 5, status: 'active' },
      { name: 'ุดุงู ุทุงุฆูู ุจุฑุงุฏ ุตุบูุฑ', categoryId: categoryMap['ุงูุดุงู'], price: 14, order: 6, status: 'active' },
      { name: 'ุดุงู ุฃุญูุฑ ุจุฑุงุฏ ูุจูุฑ', categoryId: categoryMap['ุงูุดุงู'], price: 25, order: 7, status: 'active' },
      { name: 'ุดุงู ุฃุญูุฑ ุจุฑุงุฏ ูุณุท', categoryId: categoryMap['ุงูุดุงู'], price: 18, order: 8, status: 'active' },
      { name: 'ุดุงู ุฃุญูุฑ ุจุฑุงุฏ ุตุบูุฑ', categoryId: categoryMap['ุงูุดุงู'], price: 14, order: 9, status: 'active' },

      // Coffee of the Day
      { name: 'ูููุฉ ุงูููู ุญุงุฑ', categoryId: categoryMap['ูููุฉ ุงูููู'], price: 12, order: 1, status: 'active' },
      { name: 'ูููุฉ ุงูููู ุจุงุฑุฏ', categoryId: categoryMap['ูููุฉ ุงูููู'], price: 12, order: 2, status: 'active' }
    ];
    
    console.log('Creating menu items...');
    const createdItems = await MenuItem.insertMany(menuItems);
    
    console.log(`Successfully created ${createdItems.length} menu items`);
    
    console.log('\nโ Beverage menu update completed successfully!');
    console.log('๐ Summary:');
    console.log(`   - Categories: ${createdCategories.length}`);
    console.log(`   - Menu Items: ${createdItems.length}`);
    
    process.exit(0);
  } catch (error) {
    console.error('โ Error updating beverage menu:', error);
    process.exit(1);
  }
}

// Run the script
updateBeverageMenu();

