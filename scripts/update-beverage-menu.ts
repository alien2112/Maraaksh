import mongoose from 'mongoose';
import dotenv from 'dotenv';
import Category from '../lib/models/Category.js';
import MenuItem from '../lib/models/MenuItem.js';

dotenv.config();

// Connect to MongoDB
async function connectDB() {
  try {
    await mongoose.connect(process.env.MONGODB_URI!);
    console.log('Connected to MongoDB');
  } catch (error) {
    console.error('MongoDB connection error:', error);
    process.exit(1);
  }
}

// Delete existing categories and menu items
async function clearExistingData() {
  try {
    console.log('Deleting existing categories and menu items...');
    
    // Delete all menu items first (due to foreign key constraints)
    const deletedItems = await MenuItem.deleteMany({});
    console.log(`Deleted ${deletedItems.deletedCount} menu items`);
    
    // Delete all categories
    const deletedCategories = await Category.deleteMany({});
    console.log(`Deleted ${deletedCategories.deletedCount} categories`);
    
    console.log('Existing data cleared successfully');
  } catch (error) {
    console.error('Error clearing existing data:', error);
    throw error;
  }
}

// Create new categories
async function createCategories() {
  const categories = [
    {
      name: 'ุงููููุฉ ุงูุณุงุฎูุฉ',
      nameEn: 'Hot Coffee',
      description: 'ูุดุฑูุจุงุช ุงููููุฉ ุงูุณุงุฎูุฉ ุงูุทุงุฒุฌุฉ',
      color: '#8B4513',
      icon: 'โ',
      order: 1,
      featured: true,
      featuredOrder: 1,
      status: 'active' as const
    },
    {
      name: 'ุงููุดุฑูุจุงุช ุงูุจุงุฑุฏุฉ',
      nameEn: 'Cold Beverages',
      description: 'ูุดุฑูุจุงุช ุงููููุฉ ุงูุจุงุฑุฏุฉ ุงูููุนุดุฉ',
      color: '#4169E1',
      icon: '๐ง',
      order: 2,
      featured: true,
      featuredOrder: 2,
      status: 'active' as const
    },
    {
      name: 'ุนุตุงุฆุฑ ุทุงุฒุฌุฉ',
      nameEn: 'Fresh Juices',
      description: 'ุนุตุงุฆุฑ ุงูููุงูู ุงูุทุงุฒุฌุฉ ุงูุทุจูุนูุฉ',
      color: '#FF6347',
      icon: '๐น',
      order: 3,
      featured: true,
      featuredOrder: 3,
      status: 'active' as const
    },
    {
      name: 'ูุดุฑูุจุงุช ุงูุทุงูุฉ',
      nameEn: 'Energy Drinks',
      description: 'ูุดุฑูุจุงุช ุงูุทุงูุฉ ุงูููุนุดุฉ',
      color: '#FFD700',
      icon: 'โก',
      order: 4,
      featured: false,
      status: 'active' as const
    },
    {
      name: 'ูุดุฑูุจุงุช ุงููููุชู',
      nameEn: 'Mojito Drinks',
      description: 'ูุดุฑูุจุงุช ุงููููุชู ุงูููุนุดุฉ ุจุงููุนูุงุน',
      color: '#32CD32',
      icon: '๐ฟ',
      order: 5,
      featured: false,
      status: 'active' as const
    },
    {
      name: 'ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ',
      nameEn: 'Soft Drinks',
      description: 'ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ ูุงูููุณู',
      color: '#FF69B4',
      icon: '๐ฅค',
      order: 6,
      featured: false,
      status: 'active' as const
    },
    {
      name: 'ุงููููุฉ ุงูููุทุฑุฉ',
      nameEn: 'Drip Coffee',
      description: 'ูููุฉ ููุทุฑุฉ ุทุงุฒุฌุฉ',
      color: '#654321',
      icon: 'โ',
      order: 7,
      featured: false,
      status: 'active' as const
    },
    {
      name: 'ุงูุดุงู',
      nameEn: 'Tea',
      description: 'ุดุงู ุฃุซุงู ูุทุงุฆูู ูุฃุญูุฑ',
      color: '#8B0000',
      icon: '๐ต',
      order: 8,
      featured: false,
      status: 'active' as const
    },
    {
      name: 'ูููุฉ ุงูููู',
      nameEn: 'Coffee of the Day',
      description: 'ูููุฉ ุงูููู ุงููููุฒุฉ',
      color: '#D2691E',
      icon: 'โญ',
      order: 9,
      featured: true,
      featuredOrder: 4,
      status: 'active' as const
    }
  ];

  try {
    console.log('Creating new categories...');
    const createdCategories = await Category.insertMany(categories);
    console.log(`Created ${createdCategories.length} categories`);
    return createdCategories;
  } catch (error) {
    console.error('Error creating categories:', error);
    throw error;
  }
}

// Create menu items
async function createMenuItems(categories: any[]) {
  const categoryMap: { [key: string]: string } = {};
  categories.forEach(cat => {
    categoryMap[cat.name] = cat._id;
  });

  const menuItems = [
    // Hot Coffee
    { name: 'ุงุณุจุฑูุณู', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 12, order: 1, status: 'active' as const },
    { name: 'ููุงุชู', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 14, order: 2, status: 'active' as const },
    { name: 'ุงูุฑููุงูู', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 14, order: 3, status: 'active' as const },
    { name: 'ููุฑุชุงุฏู', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 15, order: 4, status: 'active' as const },
    { name: 'ููุงุช ูุงูุช', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 16, order: 5, status: 'active' as const },
    { name: 'ูุงุชูู', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 17, order: 6, status: 'active' as const },
    { name: 'ูุงุจุชุดููู', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 17, order: 7, status: 'active' as const },
    { name: 'ุณุจูุด ูุงุชูู', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 19, order: 8, status: 'active' as const },
    { name: 'ูุงูุช ูููุง ุญุงุฑ', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 19, order: 9, status: 'active' as const },
    { name: 'ูููุง ุญุงุฑ', categoryId: categoryMap['ุงููููุฉ ุงูุณุงุฎูุฉ'], price: 19, order: 10, status: 'active' as const },

    // Cold Beverages
    { name: 'ุงูุณ ุงูุฑููุงูู', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุจุงุฑุฏุฉ'], price: 18, order: 1, status: 'active' as const },
    { name: 'ุงูุณ ูุงุชูู', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุจุงุฑุฏุฉ'], price: 18, order: 2, status: 'active' as const },
    { name: 'ุงูุณ ุณุจูุด ูุงุชูู', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุจุงุฑุฏุฉ'], price: 20, order: 3, status: 'active' as const },
    { name: 'ุฃูุณ ูุงูุช ูููุง', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุจุงุฑุฏุฉ'], price: 20, order: 4, status: 'active' as const },
    { name: 'ุฃูุณ ูููุง', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุจุงุฑุฏุฉ'], price: 20, order: 5, status: 'active' as const },
    { name: 'ุฃูุณ ูุฑูุฏูู', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุจุงุฑุฏุฉ'], price: 19, order: 6, status: 'active' as const },

    // Fresh Juices
    { name: 'ุจุฑุชูุงู', categoryId: categoryMap['ุนุตุงุฆุฑ ุทุงุฒุฌุฉ'], price: 19, order: 1, status: 'active' as const },
    { name: 'ููุฌุง ุณุงุฏุฉ', categoryId: categoryMap['ุนุตุงุฆุฑ ุทุงุฒุฌุฉ'], price: 19, order: 2, status: 'active' as const },
    { name: 'ููุฌุง ุญููุจ', categoryId: categoryMap['ุนุตุงุฆุฑ ุทุงุฒุฌุฉ'], price: 19, order: 3, status: 'active' as const },
    { name: 'ููููู ุณุงุฏุฉ', categoryId: categoryMap['ุนุตุงุฆุฑ ุทุงุฒุฌุฉ'], price: 16, order: 4, status: 'active' as const },
    { name: 'ููููู ูุนูุงุน', categoryId: categoryMap['ุนุตุงุฆุฑ ุทุงุฒุฌุฉ'], price: 19, order: 5, status: 'active' as const },
    { name: 'ุงููุงุฏู ุญููุจ', categoryId: categoryMap['ุนุตุงุฆุฑ ุทุงุฒุฌุฉ'], price: 19, order: 6, status: 'active' as const },

    // Energy Drinks
    { name: 'ุฑุฏุจูู', categoryId: categoryMap['ูุดุฑูุจุงุช ุงูุทุงูุฉ'], price: 20, order: 1, status: 'active' as const },
    { name: 'ููุฏุฑุฏ', categoryId: categoryMap['ูุดุฑูุจุงุช ุงูุทุงูุฉ'], price: 18, order: 2, status: 'active' as const },
    { name: 'ุฑูุชุง', categoryId: categoryMap['ูุดุฑูุจุงุช ุงูุทุงูุฉ'], price: 15, order: 3, status: 'active' as const },

    // Mojito Drinks
    { name: 'ูููุชู ุฑุฏุจูู', categoryId: categoryMap['ูุดุฑูุจุงุช ุงููููุชู'], price: 25, order: 1, status: 'active' as const },
    { name: 'ูููุชู ููุฏุฑุฏ', categoryId: categoryMap['ูุดุฑูุจุงุช ุงููููุชู'], price: 22, order: 2, status: 'active' as const },
    { name: 'ูููุชู ุฑูุชุง', categoryId: categoryMap['ูุดุฑูุจุงุช ุงููููุชู'], price: 20, order: 3, status: 'active' as const },
    { name: 'ูููุชู ุณูู', categoryId: categoryMap['ูุดุฑูุจุงุช ุงููููุชู'], price: 18, order: 4, status: 'active' as const },

    // Soft Drinks
    { name: 'ุณูู', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ'], price: 7, order: 1, status: 'active' as const },
    { name: 'ุญูุถูุงุช', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ'], price: 7, order: 2, status: 'active' as const },
    { name: 'ุจุจุณู', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ'], price: 7, order: 3, status: 'active' as const },
    { name: 'ููุณู ูุฑููุฉ', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ'], price: 19, order: 4, status: 'active' as const },
    { name: 'ููุณู ุดุนูุฑ', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ'], price: 19, order: 5, status: 'active' as const },
    { name: 'ููุณู ุฑูุงู', categoryId: categoryMap['ุงููุดุฑูุจุงุช ุงูุบุงุฒูุฉ'], price: 19, order: 6, status: 'active' as const },

    // Drip Coffee
    { name: 'ูู60', categoryId: categoryMap['ุงููููุฉ ุงูููุทุฑุฉ'], price: 18, order: 1, status: 'active' as const },
    { name: 'ุงูุณ ุฏุฑูุจ', categoryId: categoryMap['ุงููููุฉ ุงูููุทุฑุฉ'], price: 18, order: 2, status: 'active' as const },

    // Tea
    { name: 'ุดุงู ุฃุซุงู ุจุฑุงุฏ ูุจูุฑ', categoryId: categoryMap['ุงูุดุงู'], price: 25, order: 1, status: 'active' as const },
    { name: 'ุดุงู ุฃุซุงู ุจุฑุงุฏ ูุณุท', categoryId: categoryMap['ุงูุดุงู'], price: 18, order: 2, status: 'active' as const },
    { name: 'ุดุงู ุฃุซุงู ุจุฑุงุฏ ุตุบูุฑ', categoryId: categoryMap['ุงูุดุงู'], price: 14, order: 3, status: 'active' as const },
    { name: 'ุดุงู ุทุงุฆูู ุจุฑุงุฏ ูุจูุฑ', categoryId: categoryMap['ุงูุดุงู'], price: 25, order: 4, status: 'active' as const },
    { name: 'ุดุงู ุทุงุฆูู ุจุฑุงุฏ ูุณุท', categoryId: categoryMap['ุงูุดุงู'], price: 18, order: 5, status: 'active' as const },
    { name: 'ุดุงู ุทุงุฆูู ุจุฑุงุฏ ุตุบูุฑ', categoryId: categoryMap['ุงูุดุงู'], price: 14, order: 6, status: 'active' as const },
    { name: 'ุดุงู ุฃุญูุฑ ุจุฑุงุฏ ูุจูุฑ', categoryId: categoryMap['ุงูุดุงู'], price: 25, order: 7, status: 'active' as const },
    { name: 'ุดุงู ุฃุญูุฑ ุจุฑุงุฏ ูุณุท', categoryId: categoryMap['ุงูุดุงู'], price: 18, order: 8, status: 'active' as const },
    { name: 'ุดุงู ุฃุญูุฑ ุจุฑุงุฏ ุตุบูุฑ', categoryId: categoryMap['ุงูุดุงู'], price: 14, order: 9, status: 'active' as const },

    // Coffee of the Day
    { name: 'ูููุฉ ุงูููู ุญุงุฑ', categoryId: categoryMap['ูููุฉ ุงูููู'], price: 12, order: 1, status: 'active' as const },
    { name: 'ูููุฉ ุงูููู ุจุงุฑุฏ', categoryId: categoryMap['ูููุฉ ุงูููู'], price: 12, order: 2, status: 'active' as const }
  ];

  try {
    console.log('Creating menu items...');
    const createdItems = await MenuItem.insertMany(menuItems);
    console.log(`Created ${createdItems.length} menu items`);
    return createdItems;
  } catch (error) {
    console.error('Error creating menu items:', error);
    throw error;
  }
}

// Main function
async function updateMenu() {
  try {
    await connectDB();
    await clearExistingData();
    const categories = await createCategories();
    await createMenuItems(categories);
    
    console.log('\nโ Menu update completed successfully!');
    console.log('๐ Summary:');
    console.log(`   - Categories: ${categories.length}`);
    console.log(`   - Menu Items: ${await MenuItem.countDocuments()}`);
    
  } catch (error) {
    console.error('โ Error updating menu:', error);
  } finally {
    await mongoose.disconnect();
    console.log('Disconnected from MongoDB');
  }
}

// Run the script
updateMenu();
